size = "Acres Burned"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Load and prepare the data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Calculate percent of total and labels
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)")
)
# Format total acres for subtitle
formatted_total <- comma(round(total_acres, 0))
# Plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show percent of total acres burned per fire\nTotal acres burned across all fires:", formatted_total),
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Get numeric positions of the fire names in the plot order
fire_levels <- afg_2023_table %>%
arrange(`AFG Cover (%)`) %>%
mutate(y_pos = row_number()) %>%
select(`Fire Name`, y_pos)
# Get positions of Cow Valley and Wiley Flat
y_cow_valley <- fire_levels %>% filter(`Fire Name` == "COW VALLEY") %>% pull(y_pos)
y_wiley_flat <- fire_levels %>% filter(`Fire Name` == "WILEY FLAT") %>% pull(y_pos)
# Load packages
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and labels
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)")
)
# For y positioning of fires in plot
fire_levels <- afg_2023_table %>%
arrange(`AFG Cover (%)`) %>%
mutate(y_pos = row_number()) %>%
select(`Fire Name`, y_pos)
# Get numeric y-axis position of example fires
y_cow_valley <- fire_levels %>% filter(`Fire Name` == "COW VALLEY") %>% pull(y_pos)
y_wiley_flat <- fire_levels %>% filter(`Fire Name` == "WILEY FLAT") %>% pull(y_pos)
# Main plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
geom_hline(yintercept = y_cow_valley, color = "#1b7837", linetype = "dotted", linewidth = 1) +
geom_hline(yintercept = y_wiley_flat, color = "#762a83", linetype = "dotted", linewidth = 1) +
annotate("text", x = 5, y = y_cow_valley + 0.3, label = "Cow Valley (below threshold)", hjust = 0, color = "#1b7837", size = 3.5) +
annotate("text", x = 5, y = y_wiley_flat + 0.3, label = "Wiley Flat (above threshold)", hjust = 0, color = "#762a83", size = 3.5) +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load packages
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and labels
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)")
)
# For y positioning of fires in plot
fire_levels <- afg_2023_table %>%
arrange(`AFG Cover (%)`) %>%
mutate(y_pos = row_number()) %>%
select(`Fire Name`, y_pos)
# Get numeric y-axis position of example fires
y_cow_valley <- fire_levels %>% filter(`Fire Name` == "COW VALLEY") %>% pull(y_pos)
y_wiley_flat <- fire_levels %>% filter(`Fire Name` == "WILEY FLAT") %>% pull(y_pos)
# Main plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load packages
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and labels
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)")
)
# For y positioning of fires in plot
fire_levels <- afg_2023_table %>%
arrange(`AFG Cover (%)`) %>%
mutate(y_pos = row_number()) %>%
select(`Fire Name`, y_pos)
# Get numeric y-axis position of example fires
y_cow_valley <- fire_levels %>% filter(`Fire Name` == "COW VALLEY") %>% pull(y_pos)
y_wiley_flat <- fire_levels %>% filter(`Fire Name` == "WILEY FLAT") %>% pull(y_pos)
# Main plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
annotate("text", x = 35, y = 2, label = "Below 15%: 29.2% of acres", size = 3.5, hjust = 1, color = "#1b7837") +
annotate("text", x = 35, y = 19, label = "Above 15%: 70.8% of acres", size = 3.5, hjust = 1, color = "#762a83")
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Y-axis fire positions for reference lines
fire_levels <- afg_2023_table %>%
arrange(`AFG Cover (%)`) %>%
mutate(y_pos = row_number()) %>%
select(`Fire Name`, y_pos)
# Get y-axis positions for specific fires
y_cow_valley <- fire_levels %>% filter(`Fire Name` == "COW VALLEY") %>% pull(y_pos)
y_wiley_flat <- fire_levels %>% filter(`Fire Name` == "WILEY FLAT") %>% pull(y_pos)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
geom_hline(yintercept = y_cow_valley, color = "#1b7837", linetype = "dotted", linewidth = 1) +
geom_hline(yintercept = y_wiley_flat, color = "#762a83", linetype = "dotted", linewidth = 1) +
annotate("text", x = 5, y = y_cow_valley + 0.3, label = "Cow Valley (below threshold)", hjust = 0, color = "#1b7837", size = 3.5) +
annotate("text", x = 5, y = y_wiley_flat + 0.3, label = "Wiley Flat (above threshold)", hjust = 0, color = "#762a83", size = 3.5) +
annotate("text", x = 35, y = 2, label = paste0("Below 15%: ", prop_below, "% of acres"), hjust = 1, color = "#1b7837", size = 3.5) +
annotate("text", x = 35, y = 19, label = paste0("Above 15%: ", prop_above, "% of acres"), hjust = 1, color = "#762a83", size = 3.5) +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires >15% AFG: ", prop_above, "% of total acres burned | ",
"Fires ≤15% AFG: ", prop_below, "% of total acres burned")
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned |", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned | ", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned | ", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned | ", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
