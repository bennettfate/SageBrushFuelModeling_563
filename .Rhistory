`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires >15% AFG: ", prop_above, "% of total acres burned | ",
"Fires ≤15% AFG: ", prop_below, "% of total acres burned")
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned |", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned | ", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned | ", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned | ", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr)
library(sf)
library(mapview)
library(ggplot2)
library(randomForest)
library(pdp)
library(tidyr)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned | ", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 0.7) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
ggsave(
filename = "AFG_2023_dotplot.png",
path = "C:/Users/allesl/Documents/GitHub/SageBrushFuelModeling_563/Oregon_2024_Plots",
width = 14,
height = 12,
dpi = 300
)
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned | ", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 1.0) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
ggsave(
filename = "AFG_2023_dotplot.png",
path = "C:/Users/allesl/Documents/GitHub/SageBrushFuelModeling_563/Oregon_2024_Plots",
width = 14,
height = 12,
dpi = 300
)
library(dplyr)
library(ggplot2)
library(rstatix)
library(ggpubr)
# Ensure Year is a factor
df_abiotic$Year <- as.factor(df_abiotic$Year)
# Run Tukey HSD per variable and filter comparisons to 2024
tukey_filtered <- df_abiotic %>%
group_by(Variable) %>%
tukey_hsd(Value ~ Year) %>%
filter(group2 == "2024") %>%
ungroup()
# Create label placement df (for placing on the boxplot)
label_df <- df_abiotic %>%
group_by(Variable, Year) %>%
summarise(y = max(Value, na.rm = TRUE) * 1.05, .groups = "drop") %>%
left_join(
tukey_filtered %>% select(Variable, group1, p.adj.signif),
by = c("Variable", "Year" = "group1")
)
# Replace NAs (which occur for 2024) with "ref"
label_df$p.adj.signif[is.na(label_df$p.adj.signif)] <- "ref"
# Plot
ggplot(df_abiotic, aes(x = Year, y = Value, fill = Year)) +
geom_boxplot(outlier.shape = 21, outlier.size = 1) +
geom_text(data = label_df, aes(label = p.adj.signif, y = y), inherit.aes = TRUE, size = 3.5) +
facet_wrap(~ Variable, scales = "free_y") +
theme_classic() +
labs(
x = "Year", y = "Mean Value",
title = "Abiotic Covariates per Fire (2021–2024)\nStatistical Significance vs. 2024",
caption = "* = p < 0.05   ** = p < 0.01   *** = p < 0.001  **** = p < 0.0001  ref = reference group (2024)"
)
ggsave(
filename = "abiotic_tukey_analysis.png",
path = "C:/Users/allesl/Documents/GitHub/SageBrushFuelModeling_563/Oregon_2024_Plots",
width = 14,
height = 12,
dpi = 300
# Load libraries
library(ggplot2)
library(dplyr)
library(readr)
library(scales)
# Read and prep data
afg_2023_table <- read_csv("ZonalStats_AFG_PFG_SHR_TRE_ByFireArea_2021_2024.csv") %>%
filter(year == 2023) %>%
rename(
FIRE_ID = OBJECTID_1,
`Fire Name` = INCIDENT,
`AFG Cover (%)` = AFG,
`Fire Size (acres)` = GIS_ACRES
) %>%
select(FIRE_ID, `Fire Name`, `AFG Cover (%)`, `Fire Size (acres)`)
# Total acres burned
total_acres <- sum(afg_2023_table$`Fire Size (acres)`, na.rm = TRUE)
formatted_total <- comma(round(total_acres, 0))
# Add % burned and threshold group
afg_2023_table <- afg_2023_table %>%
mutate(
`Percent of Total Burned` = `Fire Size (acres)` / total_acres,
Label = paste0(round(`Percent of Total Burned` * 100, 1), "%\n(", round(`Fire Size (acres)`), " acres)"),
`Threshold Group` = ifelse(`AFG Cover (%)` > 15, ">15%", "≤15%")
)
# Threshold proportion summaries
threshold_summary <- afg_2023_table %>%
group_by(`Threshold Group`) %>%
summarise(Proportion = sum(`Percent of Total Burned`)) %>%
mutate(Proportion = round(Proportion * 100, 1))  # convert to %
prop_above <- threshold_summary %>% filter(`Threshold Group` == ">15%") %>% pull(Proportion)
prop_below <- threshold_summary %>% filter(`Threshold Group` == "≤15%") %>% pull(Proportion)
# Caption with summary
caption_text <- paste0("Fires ≤15% AFG: ", prop_below, "% of total acres burned | ", "Fires >15% AFG: ", prop_above, "% of total acres burned"
)
# Create the plot
ggplot(afg_2023_table, aes(x = `AFG Cover (%)`, y = reorder(`Fire Name`, `AFG Cover (%)`))) +
geom_point(aes(size = `Fire Size (acres)`), color = "#cc5500", alpha = 1.0) +
geom_text(aes(label = Label), hjust = -0.1, size = 3.5) +
geom_vline(xintercept = 15, linetype = "dashed", color = "black") +
scale_size_continuous(range = c(2, 10)) +
guides(size = "none") +
theme_classic() +
labs(
title = "2023 AFG Cover by Fire",
subtitle = paste("Dot labels show % of total acres burned\nTotal acres burned:", formatted_total),
caption = caption_text,
x = "AFG Cover (%)",
y = "Fire Name"
) +
xlim(0, max(afg_2023_table$`AFG Cover (%)`, na.rm = TRUE) + 5)
ggsave(
filename = "AFG_2023_dotplot.png",
path = "C:/Users/allesl/Documents/GitHub/SageBrushFuelModeling_563/Oregon_2024_Plots",
width = 14,
height = 12,
dpi = 300
)
library(dplyr)
library(ggplot2)
library(rstatix)
library(ggpubr)
# Ensure Year is a factor
df_abiotic$Year <- as.factor(df_abiotic$Year)
# Run Tukey HSD per variable and filter comparisons to 2024
tukey_filtered <- df_abiotic %>%
group_by(Variable) %>%
tukey_hsd(Value ~ Year) %>%
filter(group2 == "2024") %>%
ungroup()
# Create label placement df (for placing on the boxplot)
label_df <- df_abiotic %>%
group_by(Variable, Year) %>%
summarise(y = max(Value, na.rm = TRUE) * 1.05, .groups = "drop") %>%
left_join(
tukey_filtered %>% select(Variable, group1, p.adj.signif),
by = c("Variable", "Year" = "group1")
)
# Replace NAs (which occur for 2024) with "ref"
label_df$p.adj.signif[is.na(label_df$p.adj.signif)] <- "ref"
# Plot
ggplot(df_abiotic, aes(x = Year, y = Value, fill = Year)) +
geom_boxplot(outlier.shape = 21, outlier.size = 1) +
geom_text(data = label_df, aes(label = p.adj.signif, y = y), inherit.aes = TRUE, size = 3.5) +
facet_wrap(~ Variable, scales = "free_y") +
theme_classic() +
labs(
x = "Year", y = "Mean Value",
title = "Abiotic Covariates per Fire (2021–2024)\nStatistical Significance vs. 2024",
caption = "* = p < 0.05   ** = p < 0.01   *** = p < 0.001  **** = p < 0.0001  ref = reference group (2024)"
)
ggsave(
filename = "abiotic_tukey_analysis.png",
path = "C:/Users/allesl/Documents/GitHub/SageBrushFuelModeling_563/Oregon_2024_Plots",
width = 14,
height = 12,
dpi = 300
)
library(sf)
Biotic_cov_sf <- st_as_sf(Biotic_cov_with_xy, coords = c("x", "y"), crs = 4326)
mapview(Biotic_cov_sf, zcol = "AFG", col.regions = viridis::viridis(100), layer.name = "AFG Cover")
=======
library(sf)
Biotic_cov_sf <- st_as_sf(Biotic_cov_with_xy, coords = c("x", "y"), crs = 4326)
mapview(Biotic_cov_sf, zcol = "AFG", col.regions = viridis::viridis(100), layer.name = "AFG Cover")
